<?xml version="1.0" encoding="UTF-8" standalone="no"?><umlet_diagram><help_text>// Uncomment the following line to change the fontsize:
// fontsize=14


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on UML elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use Â± or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text><zoom_level>10</zoom_level><element><type>com.umlet.element.base.Class</type><coordinates><x>480</x><y>630</y><w>190</w><h>120</h></coordinates><panel_attributes>Deacon
--
-handler:Handler
-bcr:BroadcastReceiver
--
+getBroadcastReceiver()
socketLine(String)
finalize()</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>440</x><y>290</y><w>280</w><h>290</h></coordinates><panel_attributes>DeaconService
--
-catchUpTimeOut:Int
-deaconThread:DeaconRunnable
-host:String
-port:Int
-hostID:long
-running:boolean
-subscriptions:arrayList&lt;Subscription&gt;
--
+DeaconService()
+isRunning()
+start()
+stop()
+joinChannel()
+leaveChannel()
parse(String)
socketLine(String)</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>800</x><y>320</y><w>160</w><h>100</h></coordinates><panel_attributes>DeaconRunnable
--
-sock:Socket
-in:BufferedReader
-out:BufferedWriter
--
+run()</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>830</x><y>250</y><w>100</w><h>30</h></coordinates><panel_attributes>Runnable
bg=gray</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>850</x><y>250</y><w>50</w><h>90</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>30;30;30;70</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>800</x><y>450</y><w>200</w><h>130</h></coordinates><panel_attributes>&lt;&lt;data class&gt;&gt;
Subscription
--
+channel:String
+backtrack:Int
+lastMessageReceived:Int
+catchup:Int
--
+toString()</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>690</x><y>490</y><w>130</w><h>50</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=0..*</panel_attributes><additional_attributes>30;30;110;30</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>690</x><y>340</y><w>130</w><h>50</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>30;30;110;30</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>550</x><y>550</y><w>50</w><h>100</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>30;30;30;80</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>160</x><y>90</y><w>200</w><h>100</h></coordinates><panel_attributes>&lt;&lt;interface&gt;&gt;
DeaconObserver
--
--
onPush(DeaconResponse)
onError(DeaconError)
onReconnect()</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>440</x><y>80</y><w>290</w><h>130</h></coordinates><panel_attributes>DeaconObservable
--
-observers:arrayList&lt;DeaconObserver&gt;
--
+register(DeaconObserver)
+unregister(DeaconObserver)
+notifyObservers(DeaconResponse)
+notifyObserversError(DeaconError)
+notifyObserversReconnect()</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>330</x><y>110</y><w>130</w><h>50</h></coordinates><panel_attributes>lt=&lt;-
m1=0..*
m2=1</panel_attributes><additional_attributes>30;30;110;30</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>550</x><y>180</y><w>50</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>30;30;30;110</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>210</x><y>650</y><w>100</w><h>30</h></coordinates><panel_attributes>UserApp
bg=gray</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>230</x><y>160</y><w>50</w><h>510</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>30;30;30;490</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>730</x><y>670</y><w>100</w><h>30</h></coordinates><panel_attributes>Message
bg=gray</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>640</x><y>650</y><w>110</w><h>50</h></coordinates><panel_attributes>lt=&lt;-&gt;</panel_attributes><additional_attributes>90;30;30;30</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>280</x><y>630</y><w>220</w><h>50</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>200;30;30;30</additional_attributes></element></umlet_diagram>